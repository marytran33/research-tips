// Utility Color Classes

//.success {
//
//}

// Google Color Palette defined: http://www.google.com/design/spec/style/color.html


$ucla-color: (
  "base":       #3284bf,
  "blue":       #3284bf,
  "gold":  #ffe800,
  "ucla-blue-text":  #347bad,
  "two-dark-blue":  #1e4b87,
  "two-cerulean":  #f3989b,
  "three-yellow":  #FEFF01,
  "three-green":  #01FF83,
  "three-fuchsia":   #FF00A6,
  "three-veronica":   #851FFF,
  "three-aqua":   #01FFFF,
  "three-steel":   #8b1014,
  "three-lightning":   #FEBD25,
);

// Color Classes

@each $color_name, $color in $colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" {
      .#{$color_name} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text {
        color: $color_value !important;
      }
    }
    @else if $color_name != "shades" {
      .#{$color_name}.#{$color_type} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text.text-#{$color_type} {
        color: $color_value !important;
      }
    }
  }
}

// Shade classes
@each $color, $color_value in $shades {
  .#{$color} {
    background-color: $color_value !important;
  }
  .#{$color}-text {
    color: $color_value !important;
  }
}


// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)

@function color($color, $type) {
  @if map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
    @if map-has-key($curr_color, $type) {
      @return map-get($curr_color, $type);
    }
  }
  @warn "Unknown `#{name}` in $colors.";
  @return null;
}

